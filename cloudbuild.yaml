steps:
  - name: alpine
    args:
      - '-c'
      - |
        echo "***********************"
        echo "$BRANCH_NAME"
        echo "***********************"
    id: branch name
    entrypoint: sh
      
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: 'bash' 
    args:
    - '-c'
    - |
        if [ -d "environments/$BRANCH_NAME/" ]; then
        cd environments/$BRANCH_NAME
        gcloud container clusters get-credentials mgcp-host-crossplane-k8scluster1 --zone us-central1-c --project gitops-vittal 
        fi
 
  - name: 'gcr.io/$GCP_PROJECT_ID/envsubst'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
        if [ -d "environments/$BRANCH_NAME/" ]; then
        cd environments/$BRANCH_NAME
        sh dev/scripts/prepare_cluster_yml.sh
        echo "GKE cluster YML prepared"
        fi
        
  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'bash'
    args:
    - '-c'
    - |    
        if [ -d "environments/$BRANCH_NAME/" ]; then
        cd environments/$BRANCH_NAME
        kubectl apply -f environments/dev/cluster.yml
        echo "Customer GKE cluster provisioned"
        fi
      
timeout: 1000s     
options:
  logging: CLOUD_LOGGING_ONLY
        
